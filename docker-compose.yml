version: "3.9"
services:
  postgres:
    container_name: postgres_container
    image: postgres:13.3
    command:
      - "postgres"
      - "-c"
      - "max_connections=250"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=1512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=13000ms"
      - "-c"
      - "idle_in_transaction_session_timeout=1110s"
      - "-c"
      - "lock_timeout=1100s"
      - "-c"
      - "statement_timeout=1610s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "1234123"
      POSTGRES_DB: "postgres"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./setup:/var/lib/postgresql/setup
      - .:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U habrpguser -d habrdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 12G
    networks:
      - postgres

  app:
      build:
          context: .
          dockerfile: Dockerfile
      volumes:
          - ./scripts:/app
          - ./storage:/app/storage
          - ./storage/dictionary:/app/storage/dictionary
          - ./storage/mainData:/app/storage/mainData
          - ./storage/needData:/app/storage/needData
      networks:
          - postgres
      container_name: app_container
networks:
    postgres:
        driver: bridge
